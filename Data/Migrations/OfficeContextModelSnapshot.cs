// <auto-generated />
using System;
using Data.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(OfficeContext))]
    partial class OfficeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.CashIn", b =>
                {
                    b.Property<int>("CashInId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CashInDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CashInNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CashInStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("CshInTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FirmId")
                        .HasColumnType("int");

                    b.Property<int>("Firm_Id")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceOutId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CashInId");

                    b.HasIndex("FirmId");

                    b.HasIndex("InvoiceOutId");

                    b.ToTable("T_CashIn");
                });

            modelBuilder.Entity("Entity.CashOut", b =>
                {
                    b.Property<int>("CashOutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CashOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CashOutNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CashOutStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("CashOutTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FirmId")
                        .HasColumnType("int");

                    b.Property<int>("Firm_Id")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceInId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CashOutId");

                    b.HasIndex("FirmId");

                    b.HasIndex("InvoiceInId");

                    b.ToTable("T_CashOut");
                });

            modelBuilder.Entity("Entity.Expence", b =>
                {
                    b.Property<int>("ExpenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExpenceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ExpenceStatus")
                        .HasColumnType("bit");

                    b.HasKey("ExpenceId");

                    b.ToTable("T_Expence");
                });

            modelBuilder.Entity("Entity.Firm", b =>
                {
                    b.Property<int>("FirmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirmCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FirmStatus")
                        .HasColumnType("bit");

                    b.Property<short>("FirmType")
                        .HasColumnType("smallint");

                    b.HasKey("FirmId");

                    b.ToTable("T_Firm");
                });

            modelBuilder.Entity("Entity.InvoiceIn", b =>
                {
                    b.Property<int>("InvoiceInId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FirmId")
                        .HasColumnType("int");

                    b.Property<int>("Firm_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceInDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceInNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InvoiceInStatus")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceInId");

                    b.HasIndex("FirmId");

                    b.ToTable("T_InvoiceIn");
                });

            modelBuilder.Entity("Entity.InvoiceInLine", b =>
                {
                    b.Property<int>("InvoiceInLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExpenceId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceInId")
                        .HasColumnType("int");

                    b.Property<decimal>("InvoiceInLinePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvoiceInLineQuantity")
                        .HasColumnType("int");

                    b.Property<bool>("InvoiceInLineStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("InvoiceInLineTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceInLineId");

                    b.HasIndex("ExpenceId");

                    b.HasIndex("InvoiceInId");

                    b.ToTable("T_InvoiceInLine");
                });

            modelBuilder.Entity("Entity.InvoiceOut", b =>
                {
                    b.Property<int>("InvoiceOutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FirmId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceOutNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InvoiceOutStatus")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceOutId");

                    b.HasIndex("FirmId");

                    b.ToTable("T_InvoiceOut");
                });

            modelBuilder.Entity("Entity.InvoiceOutLine", b =>
                {
                    b.Property<int>("InvoiceOutLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExpenceId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceOutId")
                        .HasColumnType("int");

                    b.Property<decimal>("InvoiceOutLinePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvoiceOutLineQuantity")
                        .HasColumnType("int");

                    b.Property<bool>("InvoiceOutLineStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("InvoiceOutLineTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceOutLineId");

                    b.HasIndex("ExpenceId");

                    b.HasIndex("InvoiceOutId");

                    b.ToTable("T_InvoiceOutLine");
                });

            modelBuilder.Entity("Entity.CashIn", b =>
                {
                    b.HasOne("Entity.Firm", "Firm")
                        .WithMany()
                        .HasForeignKey("FirmId");

                    b.HasOne("Entity.InvoiceOut", "InvoiceOut")
                        .WithMany()
                        .HasForeignKey("InvoiceOutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.CashOut", b =>
                {
                    b.HasOne("Entity.Firm", "Firm")
                        .WithMany()
                        .HasForeignKey("FirmId");

                    b.HasOne("Entity.InvoiceIn", "InvoiceIn")
                        .WithMany()
                        .HasForeignKey("InvoiceInId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.InvoiceIn", b =>
                {
                    b.HasOne("Entity.Firm", "Firm")
                        .WithMany()
                        .HasForeignKey("FirmId");
                });

            modelBuilder.Entity("Entity.InvoiceInLine", b =>
                {
                    b.HasOne("Entity.Expence", "Expence")
                        .WithMany()
                        .HasForeignKey("ExpenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.InvoiceIn", "InvoiceIn")
                        .WithMany("InvoiceInLines")
                        .HasForeignKey("InvoiceInId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.InvoiceOut", b =>
                {
                    b.HasOne("Entity.Firm", "Firm")
                        .WithMany()
                        .HasForeignKey("FirmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.InvoiceOutLine", b =>
                {
                    b.HasOne("Entity.Expence", "Expence")
                        .WithMany()
                        .HasForeignKey("ExpenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.InvoiceOut", "InvoiceOut")
                        .WithMany("InvoiceOutLines")
                        .HasForeignKey("InvoiceOutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
